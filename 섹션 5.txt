❗️섹션 5부터 공부환경이 mac으로 바뀌었습니다. 따라서 VS에서 VScode에서 코드들을 작성 및 실행하였습니다.❗️

#반복 Loop와의 만남

-goto
ㄴ goto문은 코드에서 어느 지점을 정해주면 그 지점으로 되돌아가면서 코드를 반복해서 실행한다. goto문만 작성해서 프로그램을 돌리면 무한히 반복되면 특정 조건을 만족시키면 반복문을 종료하도록 코드를 짜야한다.

-if
ㄴ 이것의 글자 그래도 ‘만약에’라는 조건을 걸수있는 명령어이다. goto문에서 if문과 goto문을 사용하여 조건이 성립되면 다른 지점으로 가도록(반복문을 탈출하는) 유도한다.

⚠️하지만 goto문은 코드를 너무 난잡하게 만들어버리기때문에(코드의 위아래를 왔다리 갔다리한다.) 불편해서 지금은 거의 사용하지않습니다.

-while
ㄴ이녀석은 ‘~하는 동안에’라는 의미를 가진 반복문 + 조건문형태의 기능을 수행한다. 위에서 설명했던 goto와 if가 짬뽕된것이다.
ㄴ while(조건) 이렇게 작성가능하며 조건이 성립될때까지 반복문은 계속 반복된다.

⚠️ 다만 주의점은 조건에 사용될 변수는 선언 및 초기화를 앞서서 해야하며, 반복문안에서 변수가 변해야함 그래야 원하는 반복문을 만들수있고 무한루프에 빠지지 않을수있다

============================================================

#대입 연산자들과 기능들

-기본 연산자
	1.	‘=‘ : 대입 연산자(=를 기준으로 좌우가 같다는 의미가아닌 값을 ‘대입’하는 연산자임을 인지하자!)
	2.	‘+’ = 더하기
	3.	‘-‘ = 빼기
	4.	‘*’ = 곱하기
	5.	‘/‘ = 나누기

-연산자, 피연산자
ㄴ대입 연산자(=)를 기준으로 좌우측에 있는 변수와 값이 피연산자이다.

-Data Object

int i; -> Data Object: 어떤 데이터가 메모리안에 존재하고있을때 그 데이터를 Data Object라고함

i = 1024;
//1024 = i

i = i + 1;
—————
-L-value(object locator value), R-value(value of an expression)
ㄴ보통은 대입연산자를 기준으로 좌측에있으면 L-value, 우측에있으면 R-value라고한다.
ㄴ정확히는 메모리를 차지하고있는 특정 데이터 객체를 L-value 
ㄴ수정가능한 L-value에게 대입될수있지만, 자기 자신은 L-value가 될 수 없는 것들은 R-value라고 합니다.

⚠️ L-value는 임시적으로 R-value역할을 할수있습니다.
즉, Data Object는 L-value가 될수있다는 것이다.

const int TWO = 2; ————> 수정이 불가능한(const) L-value(여기서 ’=‘ 는 대입이아닌 초기화)

int a; ————> a,b,c는 수정가능한 L-value
int b;
int c;

a = 42; ———> 42는 R-value
b = a;
c = TWO * (a + b); ———> (a + b)는 R-value(프로그램이 계산하는 임시값, 연산이 끝나면 사라짐)

메모리 공간을 할당받았는지 아닌지, 상수인지 변수인지에 따라 L-value R-value가 구분됩니다.

============================================================