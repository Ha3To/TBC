#while반복문에서 scanf()의 반환값 사용하기

-덧셈 계산기 만들기
ㄴ while문과 scanf문을 이용하여 덧셈 계산기를 만들어보자

-비교 연산자(equality operator)
ㄴ '==' 이렇게 생겼다.
ㄴ 양쪽의 값이 서로 같은지를 비교해주는 연산자이다.

-필요한 변수
1. 입력한 수를 저장할 변수 num
2. 입력받은 수들의 합을 저장할 변수 sum 

-필요한 계산
1. 수들을 입력받는다 scanf()
2. 입력받은 수를 num에 저장하고 sum이랑 더한다.
3. 위 과정을 while문을 사용하여 반복하고
4. 조건은 num에 q가 입력되면 sum값을 출력하고 프로그램을 종료하도록 한다.

-문제점
1. 값을 입력받고 덧셈까지는 정상적으로 실행되지만 q를 입력받고 반복문을 종료하고 sum을 출력해야하는데 q를 입력하는 부분이 잘되지 않았음

-수정사항
1. scanf에서 정수가 정상적으로 입력받았는지를 알기위해 scanf의 반환값을 이용한 'status'변수를 추가
2. scanf는 반환값으로 정상적으로 입력받은 값의 ‘개수’를 돌려주기때문에 while문에 status == 1이라는 조건(사용자가 정수를 1개씩 입력하기때문에 1을 사용하였다.)을 사용하여 정상적인 값이 들어올때는 1이 유지되어 반복이 되지만 문자인 q를 입력하면 정상적으로 입력받은 값이 0개이므로 status가 0이된다 따라서 while문이 종료되고 sum이 출력되면서 프로그램이 종료된다.

-개선사항
ㄴ코드에서 scanf를 사용하는 부분이 2개가 있는데 이를 1개로 줄이는 코드로 수정을 해보자
ㄴwhile문의 괄호안에 scanf문을 삽입하면 status변수와 1개의 scanf문이 필요가 없어진다.

===================================================================================================

#의사코드(Pseudocode)

-수도코드의 사용목적
ㄴ 코드를 작성하기전에 먼저 그 프로그램의 논리 자체에 집중해서 유사코드를 짜보는 것
ㄴ 수도코드는 프로그래밍 언어의 제약없이 작성이 가능하다.
ㄴ 그리고 별도의 정해진 문법은 없으므로 주변사람들이 읽고 이해할 정도의 논리를 나타내면 된다.

☝️프로그램의 설계도를 만든다고 생각하면 쉬울듯하다.

ex)

	[c언어 코드]						[수도코드]
int num, sum = 0;					sum을 0으로 초기화한다.

printf("Enter an integer (q to quit) : ");		사용자에게 안내한다.

while(scanf("%d", &num) == 1)				사용자에게 입력을 받고 그 입력이 정수일 동안에는
{
	sum = sum + num;						그 입력을 sum에 더한다.
	
	printf("Enter next integer (q to quit) : ");		사용자에게 다음번 입력을 받는다.
}

printf("Sum = %d\n", sum);				sum을 출력한다.

===================================================================================================

#관계 연산자(Relational Operators)

-관계 연산자의 종류(연산자의 좌측이 기준이다)
1. <  오른쪽보다 작다
2. <= 오른쪽보다 작거나 같다
3. == 오른쪽과 같다
4. >= 오른쪽보다 크거나 같다
5. >  오른쪽보다 크다
6. != 오른쪽과 같지않다.

-fabs()
ㄴ 실수끼리 관계 연산자를 이용하여 연산을 할때는 fabs를 사용하면 편리하다.
ㄴ fabs()는 ()안의 값의 절댓값을 리턴해주는 함수이다.
ㄴ 실수끼리의 자잘한 소수점 아래 수들을 무시할때 사용할 수 있다.

===================================================================================================

#사실과 거짓

-관계식은 값을 가진다.
ㄴ 프로그래밍에서 보통 1은 ture, 0은 false를 의미한다.
ㄴ 그래서 관계식을 사용해 연산을 진행하면 1 또는 0을 리턴값으로 돌려준다.

⚠️c언어에서는 1이면 참, 0이면 거짓이라고 판단하기 보다는 0이면 거짓, 0이 아니면 참 이렇게 판단을 한다.

☝️그래서 while문 괄호안에 1을 넣으면 무한루프로 만들 수 있다.

===================================================================================================

#'_Bool' 자료형

-_Bool 자료형
ㄴ C99에서 추가된 자료형이다.
ㄴ 기존에 사용되던 bool자료형과의 충돌을 피하고자 _Bool이라는 이름으로 사용하게됨
ㄴ boolean자료도 내부적으론 '정수'로 처리된다. 다만, _Bool이라는 자료형으로 사용함

-#include <stdbool.h>
ㄴ 사용자가 임의로 bool자료형을 만들어 쓸수있는 헤더파일

===================================================================================================